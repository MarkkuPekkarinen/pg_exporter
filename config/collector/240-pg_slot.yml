
pg_slot_14:
  name: pg_slot
  desc: PostgreSQL replication slot metrics v14 with wal safe size and status
  query: |
    SELECT s.slot_name, database AS datname,active,temporary,xmin::TEXT::BIGINT AS xmin,catalog_xmin::TEXT::BIGINT  AS catalog_xmin,
      restart_lsn - '0/0' AS restart_lsn, confirmed_flush_lsn - '0/0' AS confirm_lsn,
      CASE WHEN pg_is_in_recovery() THEN pg_last_wal_replay_lsn() ELSE pg_current_wal_lsn() END - restart_lsn AS retained_bytes,
      safe_wal_size, CASE wal_status WHEN 'reserved' THEN 0 WHEN 'extended' THEN 1 WHEN 'unreserved' THEN 2 WHEN 'lost' THEN 3 ELSE -1 END AS wal_status,
      spill_txns,spill_count,spill_bytes,stream_txns,stream_count,stream_bytes,total_txns,total_bytes,extract(EPOCH FROM now() - stats_reset) AS reset_time
    FROM pg_replication_slots s LEFT OUTER JOIN pg_stat_replication_slots ss ON s.slot_name = ss.slot_name;

  ttl: 10
  min_version: 140000
  tags:
    - cluster
    - primary

  metrics:
    - slot_name:
        usage: LABEL
        description: A unique, cluster-wide identifier for the replication slot
    - datname:
        usage: LABEL
        description: The name of the database this slot is associated with, or null for physical slot.
        # Only logical slots have an associated database.
    - active:
        usage: GAUGE
        description: True(1) if this slot is currently actively being used
    - temporary:
        usage: GAUGE
        description: True(1) if this is a temporary replication slot.
        # Temporary slots are not saved to disk and are automatically dropped on error or when the session has finished.
    - xmin:
        usage: COUNTER
        description: The oldest transaction that this slot needs the database to retain.
        # VACUUM cannot remove tuples deleted by any later transaction.
    - catalog_xmin:
        usage: COUNTER
        description: The oldest transaction affecting the system catalogs that this slot needs the database to retain.
        # VACUUM cannot remove catalog tuples deleted by any later transaction.
    - restart_lsn:
        usage: COUNTER
        description: The address (LSN) of oldest WAL which still might be required by the consumer of this slot
        # The address (LSN) of oldest WAL which still might be required by the consumer of this slot and thus won't be automatically removed
        # during checkpoints unless this LSN gets behind more than max_slot_wal_keep_size from the current LSN. NULL if the LSN of this slot has never been reserved.
    - confirm_lsn:
        usage: COUNTER
        description: The address (LSN) up to which the logical slot's consumer has confirmed receiving data.
        # Data older than this is not available anymore. NULL for physical slots.
    - retained_bytes:
        usage: GAUGE
        description: Size of bytes that retained for this slot
    - safe_wal_size:
        usage: GAUGE
        description: bytes that can be written to WAL which will not make slot into lost
    - wal_status:
        usage: GAUGE
        description: WAL reserve status 0-3 means reserved,extended,unreserved,lost, -1 means other
    - spill_txns:
        usage: COUNTER
        description: Xacts that spilled to disk due to logical decode mem exceeding (subtrans included)
        # Number of transactions spilled to disk once the memory used by logical decoding to decode changes from WAL has exceeded logical_decoding_work_mem. The counter gets incremented for both toplevel transactions and subtransactions.
    - spill_count:
        usage: COUNTER
        description: Xacts that spilled to disk due to logical decode mem exceeding (a xact can be spilled multiple times)
        # Number of times transactions were spilled to disk while decoding changes from WAL for this slot. This counter is incremented each time a transaction is spilled, and the same transaction may be spilled multiple times.
    - spill_bytes:
        usage: COUNTER
        description: Bytes that spilled to disk due to logical decode mem exceeding
        # Amount of decoded transaction data spilled to disk while performing decoding of changes from WAL for this slot. This and other spill counters can be used to gauge the I/O which occurred during logical decoding and allow tuning logical_decoding_work_mem.
    - stream_txns:
        usage: COUNTER
        description: Xacts that streamed to decoding output plugin after mem exceed
        # Number of in-progress transactions streamed to the decoding output plugin after the memory used by logical decoding to decode changes from WAL for this slot has exceeded logical_decoding_work_mem. Streaming only works with toplevel transactions (subtransactions can't be streamed independently), so the counter is not incremented for subtransactions.
    - stream_count:
        usage: COUNTER
        description: Xacts that streamed to decoding output plugin after mem exceed  (a xact can be streamed multiple times)
        # Number of times in-progress transactions were streamed to the decoding output plugin while decoding changes from WAL for this slot. This counter is incremented each time a transaction is streamed, and the same transaction may be streamed multiple times.
    - stream_bytes:
        usage: COUNTER
        description: Bytes that streamed to decoding output plugin after mem exceed
        # Amount of transaction data decoded for streaming in-progress transactions to the decoding output plugin while decoding changes from WAL for this slot. This and other streaming counters for this slot can be used to tune logical_decoding_work_mem.
    - total_txns:
        usage: COUNTER
        description: Number of decoded xacts sent to the decoding output plugin for this slot
        # Number of decoded transactions sent to the decoding output plugin for this slot. This counts toplevel transactions only, and is not incremented for subtransactions. Note that this includes the transactions that are streamed and/or spilled.
    - total_bytes:
        usage: COUNTER
        description: Number of decoded bytes sent to the decoding output plugin for this slot
        # Amount of transaction data decoded for sending transactions to the decoding output plugin while decoding changes from WAL for this slot. Note that this includes data that is streamed and/or spilled.
    - reset_time:
        usage: COUNTER
        description: When statistics were last reset



pg_slot_13:
  name: pg_slot
  desc: PostgreSQL replication slot metrics v13 (wal safe size and status)
  query: |
    SELECT slot_name, database AS datname,active,temporary,xmin::TEXT::BIGINT AS xmin,catalog_xmin::TEXT::BIGINT  AS catalog_xmin,
        restart_lsn - '0/0' AS restart_lsn, confirmed_flush_lsn - '0/0' AS confirm_lsn,
        CASE WHEN pg_is_in_recovery() THEN pg_last_wal_replay_lsn() ELSE pg_current_wal_lsn() END - restart_lsn AS retained_bytes,
        safe_wal_size, CASE wal_status WHEN 'reserved' THEN 0 WHEN 'extended' THEN 1 WHEN 'unreserved' THEN 2 WHEN 'lost' THEN 3 ELSE -1 END AS wal_status
    FROM pg_replication_slots;

  ttl: 10
  min_version: 130000
  max_version: 140000
  tags:
    - cluster
    - primary

  metrics:
    - slot_name:
        usage: LABEL
        description: A unique, cluster-wide identifier for the replication slot
    - datname:
        usage: LABEL
        description: The name of the database this slot is associated with, or null for physical slot.
        # Only logical slots have an associated database.
    - active:
        usage: GAUGE
        description: True(1) if this slot is currently actively being used
    - temporary:
        usage: GAUGE
        description: True(1) if this is a temporary replication slot.
        # Temporary slots are not saved to disk and are automatically dropped on error or when the session has finished.
    - xmin:
        usage: COUNTER
        description: The oldest transaction that this slot needs the database to retain.
        # VACUUM cannot remove tuples deleted by any later transaction.
    - catalog_xmin:
        usage: COUNTER
        description: The oldest transaction affecting the system catalogs that this slot needs the database to retain.
        # VACUUM cannot remove catalog tuples deleted by any later transaction.
    - restart_lsn:
        usage: COUNTER
        description: The address (LSN) of oldest WAL which still might be required by the consumer of this slot
        # The address (LSN) of oldest WAL which still might be required by the consumer of this slot and thus won't be automatically removed
        # during checkpoints unless this LSN gets behind more than max_slot_wal_keep_size from the current LSN. NULL if the LSN of this slot has never been reserved.
    - confirm_lsn:
        usage: COUNTER
        description: The address (LSN) up to which the logical slot's consumer has confirmed receiving data.
        # Data older than this is not available anymore. NULL for physical slots.
    - retained_bytes:
        usage: GAUGE
        description: Size of bytes that retained for this slot
    - safe_wal_size:
        usage: GAUGE
        description: bytes that can be written to WAL which will not make slot into lost
    - wal_status:
        usage: GAUGE
        description: WAL reserve status 0-3 means reserved,extended,unreserved,lost, -1 means other




pg_slot_10_12:
  name: pg_slot
  desc: PostgreSQL replication slot metrics v10 v11 v12
  query: |
    SELECT slot_name, database AS datname,active,temporary,xmin::TEXT::BIGINT AS xmin,catalog_xmin::TEXT::BIGINT  AS catalog_xmin,
           restart_lsn - '0/0' AS restart_lsn, confirmed_flush_lsn - '0/0' AS confirm_lsn,
           CASE WHEN pg_is_in_recovery() THEN pg_last_wal_replay_lsn() ELSE pg_current_wal_lsn() END - restart_lsn AS retained_bytes
    FROM pg_replication_slots;

  ttl: 10
  min_version: 100000
  max_version: 130000
  tags:
    - cluster
    - primary
    # can not create replication slot on replica for now

  metrics:
    - slot_name:
        usage: LABEL
        description: A unique, cluster-wide identifier for the replication slot
    - datname:
        usage: LABEL
        description: The name of the database this slot is associated with, or null for physical slot.
        # Only logical slots have an associated database.
    - active:
        usage: GAUGE
        description: True(1) if this slot is currently actively being used
    - temporary:
        usage: GAUGE
        description: True(1) if this is a temporary replication slot.
        # Temporary slots are not saved to disk and are automatically dropped on error or when the session has finished.
    - xmin:
        usage: COUNTER
        description: The oldest transaction that this slot needs the database to retain.
        # VACUUM cannot remove tuples deleted by any later transaction.
    - catalog_xmin:
        usage: COUNTER
        description: The oldest transaction affecting the system catalogs that this slot needs the database to retain.
        # VACUUM cannot remove catalog tuples deleted by any later transaction.
    - restart_lsn:
        usage: COUNTER
        description: The address (LSN) of oldest WAL which still might be required by the consumer of this slot
        # The address (LSN) of oldest WAL which still might be required by the consumer of this slot and thus won't be automatically removed
        # during checkpoints unless this LSN gets behind more than max_slot_wal_keep_size from the current LSN. NULL if the LSN of this slot has never been reserved.
    - confirm_lsn:
        usage: COUNTER
        description: The address (LSN) up to which the logical slot's consumer has confirmed receiving data.
        # Data older than this is not available anymore. NULL for physical slots.
    - retained_bytes:
        usage: GAUGE
        description: Size of bytes that retained for this slot

